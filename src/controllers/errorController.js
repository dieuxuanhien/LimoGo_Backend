// file: controllers/errorController.js

const sendErrorDev = (err, res) => {
    res.status(err.statusCode).json({
        status: err.status,
        error: err,
        message: err.message,
        stack: err.stack
    });
};

const sendErrorProd = (err, res) => {
    // Ch·ªâ g·ª≠i l·ªói c√≥ th·ªÉ d·ª± ƒëo√°n ƒë∆∞·ª£c (operational) cho client
    if (err.isOperational) {
        res.status(err.statusCode).json({
            status: err.status,
            message: err.message
        });
    } else {
        // L·ªói l·∫≠p tr√¨nh ho·∫∑c l·ªói kh√¥ng x√°c ƒë·ªãnh: kh√¥ng r√≤ r·ªâ chi ti·∫øt
        console.error('ERROR üí•', err);
        res.status(500).json({
            status: 'error',
            message: 'ƒê√£ c√≥ l·ªói x·∫£y ra!'
        });
    }
};

module.exports = (err, req, res, next) => {
    err.statusCode = err.statusCode || 500;
    err.status = err.status || 'error';

    // T√πy v√†o m√¥i tr∆∞·ªùng m√† g·ª≠i th√¥ng tin l·ªói kh√°c nhau
    if (process.env.NODE_ENV === 'development') {
        sendErrorDev(err, res);
    } else if (process.env.NODE_ENV === 'production') {
        // C√≥ th·ªÉ th√™m c√°c x·ª≠ l√Ω l·ªói c·ª• th·ªÉ ·ªü ƒë√¢y (v√≠ d·ª•: l·ªói t·ª´ Mongoose)
        sendErrorProd(err, res);
    }
};